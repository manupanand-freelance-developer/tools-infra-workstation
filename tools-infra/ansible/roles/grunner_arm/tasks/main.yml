- name: Setting up Prompt
  ansible.builtin.lineinfile: 
    path:  "/home/ec2-user/.bashrc"
    line: 'export PS1="\[\e[1;31m\]\u\[\e[0m\]@\[\e[1;34m\]{{role_name}}\[\e[0m\] \w \$ "'
    create: yes 
    mode: '0644'

- name: Source bash rc 
  ansible.builtin.shell: |
      source  ~/.bashrc
  args: 
    executable: /bin/bash     

- name: Install amzon ssm 
  ansible.builtin.shell: yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_arm64/amazon-ssm-agent.rpm

# also attach awsssmmanagedinstancecore iam role

- name: Install Ansible 
  ansible.builtin.dnf: 
     name: ansible-core
     state: installed 

- name: Install utils and dependencies 
  ansible.builtin.dnf: 
    name: 
      - yum-utils 
    state: installed 

- name: Add hashicorp repo 
  ansible.builtin.get_url: 
    url: https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo

- name: Install terraform 
  ansible.builtin.dnf: 
     name: terraform
     state: installed 


- name: Intal gh-cli
  ansible.builtin.shell: yum install -y  https://github.com/cli/cli/releases/download/v2.68.1/gh_2.68.1_linux_arm64.rpm 


- name: Install docker 
  ansible.builtin.dnf: 
     name: docker
     state: installed

- name: Start docker service 
  ansible.builtin.systemd_service:
     name: docker
     state: restarted 
     enabled: true

- name: Download Kubectl 
  ansible.builtin.get_url: 
    url: https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/arm64/kubectl
    dest: /usr/local/bin/kubectl
    mode: '0755'


- name: Install eksctl 
  ansible.builtin.unarchive: 
    src: https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_Linux_arm64.tar.gz
    dest: /usr/local/bin/
    mode: '0755'
    remote_src: yes
  



# sudo dnf install https://github.com/derailed/k9s/releases/download/v0.40.10/k9s_linux_arm64.rpm


# install trivy

# install  gh cli runner requirements
- name: Adding grunner group 
  ansible.builtin.group: 
    name: grunner 
    state: present

- name: Adding User grunner 
  ansible.builtin.user: 
     name: grunner
     group: grunner
     #can give user group group: admin 

- name: Creating github runner directory 
  ansible.builtin.file: 
    path: /action-runner 
    state: directory
    owner: grunner 
    group: grunner 

- name: Download runner and extract 
  ansible.builtin.unarchive: 
    src: https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-arm64-2.323.0.tar.gz
    dest: "/action-runner" 
    remote_src: true 
    owner: grunner 
    group: grunner 

#things to do manually in gh-cli shell on runner then
#gh auth login
#create a registration token for organisation
#gh -auth refresh -h github.com -s admin:org
#multi line commads use | or > after key

# install libicu 
- name: Install libicu 
  ansible.builtin.dnf: 
    name: libicu 
    state: present

# grab token
- name: Grab token 
  ansible.builtin.shell: |
    gh api --method POST -H "Accept:application/vnd.github+json" -H "X-Github-Api-Version:2022-11-28" /orgs/manupanand-freelance-developer/actions/runners/registration-token | jq .token 
  register: token 
  become_user: ec2-user 
# to reduce  config roblem if already configured
- name: Checking runner count 
  ansible.builtin.shell: |
     gh api  -H "Accept:application/vnd.github+json" -H "X-Github-Api-Version:2022-11-28" /orgs/manupanand-freelance-developer/actions/runners | jq .total_count
  register: runner_count
  become_user: ec2-user  
# #check runner is offline or not
- name: Checking runner status 
  ansible.builtin.shell: | 
      gh api  -H "Accept:application/vnd.github+json" -H "X-Github-Api-Version:2022-11-28" /orgs/manupanand-freelance-developer/actions/runners | jq .runners[].status
  register: runner_status 
  become_user: ec2-user 

- name: Configure github runner 
  ansible.builtin.shell: | 
    ./config.sh --url https://github.com/manupanand-freelance-developer --token {{token.stdout}} --runnergroup Default --name aws_arm --labels rhel_arm --work _work --replace
  args: 
    chdir: /action-runner 
  become_user: grunner 
  when: runner_count.stdout == "0" or runner_status.stdout=="offline" or (runner_count.stdout | int < 2)
    
- name: Start runner service  
  ansible.builtin.shell:  ./svc.sh install grunner ; ./svc.sh start
  args: 
    chdir: /action-runner 
  when: runner_count.stdout == "0" or runner_status.stdout=="offline" or (runner_count.stdout | int < 2)